// This file is @generated by prost-build.
/// EGS 解決済み情報
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct EgsInfo {
    #[prost(int32, tag = "1")]
    pub erogamescape_id: i32,
    #[prost(string, tag = "2")]
    pub gamename: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub gamename_ruby: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub brandname: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub brandname_ruby: ::prost::alloc::string::String,
    #[prost(string, tag = "6")]
    pub sellday: ::prost::alloc::string::String,
    #[prost(bool, tag = "7")]
    pub is_nukige: bool,
}
/// DMM 向けゲーム同期リクエスト
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct DmmSyncGamesRequest {
    #[prost(message, repeated, tag = "1")]
    pub games: ::prost::alloc::vec::Vec<DmmGame>,
    #[prost(string, tag = "2")]
    pub extension_id: ::prost::alloc::string::String,
}
/// DLsite 向けゲーム同期リクエスト
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct DlsiteSyncGamesRequest {
    #[prost(message, repeated, tag = "1")]
    pub games: ::prost::alloc::vec::Vec<DlsiteGame>,
    #[prost(string, tag = "2")]
    pub extension_id: ::prost::alloc::string::String,
}
/// DMM のゲームデータ
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct DmmGame {
    #[prost(string, tag = "1")]
    pub id: ::prost::alloc::string::String,
    /// "mono" | "digital"
    #[prost(string, tag = "2")]
    pub category: ::prost::alloc::string::String,
    /// "doujin" | "pcgame"
    #[prost(string, tag = "3")]
    pub subcategory: ::prost::alloc::string::String,
    /// 省略可。解決できた場合のみ付与
    #[prost(message, optional, tag = "4")]
    pub egs_info: ::core::option::Option<EgsInfo>,
    /// ゲーム名（抽出元の名称）
    #[prost(string, tag = "5")]
    pub title: ::prost::alloc::string::String,
    /// 画像URL（アイコン生成用）
    #[prost(string, tag = "6")]
    pub image_url: ::prost::alloc::string::String,
}
/// DLsite のゲームデータ
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct DlsiteGame {
    #[prost(string, tag = "1")]
    pub id: ::prost::alloc::string::String,
    /// "ai" | "maniax" | "bl" | "home" | "appx" | "girls" | "pro" | "girls-pro" | "soft"
    #[prost(string, tag = "2")]
    pub category: ::prost::alloc::string::String,
    /// 省略可。解決できた場合のみ付与
    #[prost(message, optional, tag = "3")]
    pub egs_info: ::core::option::Option<EgsInfo>,
    /// ゲーム名（抽出元の名称）
    #[prost(string, tag = "4")]
    pub title: ::prost::alloc::string::String,
    /// 画像URL（アイコン生成用）
    #[prost(string, tag = "5")]
    pub image_url: ::prost::alloc::string::String,
}
/// ゲーム同期結果のバッチレスポンス
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct SyncBatchResult {
    #[prost(uint32, tag = "1")]
    pub success_count: u32,
    #[prost(uint32, tag = "2")]
    pub error_count: u32,
    #[prost(string, repeated, tag = "3")]
    pub errors: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    /// ゲームタイトルのリスト
    #[prost(string, repeated, tag = "4")]
    pub synced_games: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
