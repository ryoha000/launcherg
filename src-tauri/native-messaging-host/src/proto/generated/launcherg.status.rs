// This file is @generated by prost-build.
/// 同期ステータス情報
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct SyncStatus {
    /// 最後の同期時刻（optional）
    #[prost(message, optional, tag = "1")]
    pub last_sync: ::core::option::Option<::pbjson_types::Timestamp>,
    /// 同期したゲーム総数
    #[prost(uint32, tag = "2")]
    pub total_synced: u32,
    /// 接続済み拡張機能のリスト
    #[prost(string, repeated, tag = "3")]
    pub connected_extensions: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    /// Native Messaging Hostが動作中かどうか
    #[prost(bool, tag = "4")]
    pub is_running: bool,
    /// 接続ステータス
    #[prost(enumeration = "ExtensionConnectionStatus", tag = "5")]
    pub connection_status: i32,
    /// エラーメッセージ（optional）
    #[prost(string, tag = "6")]
    pub error_message: ::prost::alloc::string::String,
}
/// 拡張機能の設定
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct ExtensionConfig {
    /// 自動同期の有効・無効
    #[prost(bool, tag = "1")]
    pub auto_sync: bool,
    /// 許可されたドメインのリスト
    #[prost(string, repeated, tag = "2")]
    pub allowed_domains: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    /// 同期間隔（分）
    #[prost(uint32, tag = "3")]
    pub sync_interval_minutes: u32,
    /// デバッグモードの有効・無効
    #[prost(bool, tag = "4")]
    pub debug_mode: bool,
}
/// 拡張機能の接続ステータス
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum ExtensionConnectionStatus {
    Unspecified = 0,
    /// 正常に接続済み
    Connected = 1,
    /// 接続中（チェック実行中）
    Connecting = 2,
    /// Native Messaging Hostの実行ファイルが見つからない
    HostNotFound = 3,
    /// Native Messaging Hostプロセスの起動に失敗
    HostStartupFailed = 4,
    /// ヘルスチェック通信のタイムアウト
    HealthCheckTimeout = 5,
    /// ヘルスチェック通信でエラーレスポンス
    HealthCheckFailed = 6,
    /// JSON解析エラーなどの通信エラー
    CommunicationError = 7,
    /// プロセス終了時のエラー
    ProcessTerminationError = 8,
    /// 不明なエラー
    UnknownError = 9,
}
impl ExtensionConnectionStatus {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Unspecified => "EXTENSION_CONNECTION_STATUS_UNSPECIFIED",
            Self::Connected => "EXTENSION_CONNECTION_STATUS_CONNECTED",
            Self::Connecting => "EXTENSION_CONNECTION_STATUS_CONNECTING",
            Self::HostNotFound => "EXTENSION_CONNECTION_STATUS_HOST_NOT_FOUND",
            Self::HostStartupFailed => "EXTENSION_CONNECTION_STATUS_HOST_STARTUP_FAILED",
            Self::HealthCheckTimeout => {
                "EXTENSION_CONNECTION_STATUS_HEALTH_CHECK_TIMEOUT"
            }
            Self::HealthCheckFailed => "EXTENSION_CONNECTION_STATUS_HEALTH_CHECK_FAILED",
            Self::CommunicationError => "EXTENSION_CONNECTION_STATUS_COMMUNICATION_ERROR",
            Self::ProcessTerminationError => {
                "EXTENSION_CONNECTION_STATUS_PROCESS_TERMINATION_ERROR"
            }
            Self::UnknownError => "EXTENSION_CONNECTION_STATUS_UNKNOWN_ERROR",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "EXTENSION_CONNECTION_STATUS_UNSPECIFIED" => Some(Self::Unspecified),
            "EXTENSION_CONNECTION_STATUS_CONNECTED" => Some(Self::Connected),
            "EXTENSION_CONNECTION_STATUS_CONNECTING" => Some(Self::Connecting),
            "EXTENSION_CONNECTION_STATUS_HOST_NOT_FOUND" => Some(Self::HostNotFound),
            "EXTENSION_CONNECTION_STATUS_HOST_STARTUP_FAILED" => {
                Some(Self::HostStartupFailed)
            }
            "EXTENSION_CONNECTION_STATUS_HEALTH_CHECK_TIMEOUT" => {
                Some(Self::HealthCheckTimeout)
            }
            "EXTENSION_CONNECTION_STATUS_HEALTH_CHECK_FAILED" => {
                Some(Self::HealthCheckFailed)
            }
            "EXTENSION_CONNECTION_STATUS_COMMUNICATION_ERROR" => {
                Some(Self::CommunicationError)
            }
            "EXTENSION_CONNECTION_STATUS_PROCESS_TERMINATION_ERROR" => {
                Some(Self::ProcessTerminationError)
            }
            "EXTENSION_CONNECTION_STATUS_UNKNOWN_ERROR" => Some(Self::UnknownError),
            _ => None,
        }
    }
}
